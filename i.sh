#!/bin/bash

# Define log file
log_file="install_packages.log"

# List of 100 most common npm packages (example)
packages=(
  "express"
  "lodash"
  "axios"
  "request"
  "moment"
  "chalk"
  "debug"
  "async"
  "react"
  "bluebird"
  "mongoose"
  "dotenv"
  "body-parser"
  "babel-core"
  "commander"
  "yargs"
  "joi"
  "gulp"
  "jsonwebtoken"
  "validator"
  "webpack"
  "lodash/fp"
  "eslint"
  "eslint-config-airbnb"
  "mysql"
  "passport"
  "babel-cli"
  "babel-preset-env"
  "lodash.get"
  "nodemon"
  "webpack-cli"
  "eslint-plugin-react"
  "lodash/set"
  "eslint-plugin-import"
  "lodash/map"
  "mongoose-unique-validator"
  "lodash/merge"
  "cors"
  "lodash/omit"
  "lodash/cloneDeep"
  "mongoose-validator"
  "babel-loader"
  "prop-types"
  "mongoose-paginate"
  "body-parser-xml"
  "express-validator"
  "jsonwebtoken"
  "react-dom"
  "lodash/flow"
  "axios-mock-adapter"
  "jsonwebtoken"
  "axios-retry"
  "axios-mock-adapter"
  "lodash/groupBy"
  "redux"
  "eslint-plugin-jsx-a11y"
  "react-router-dom"
  "lodash/throttle"
  "lodash/uniq"
  "babel-preset-react"
  "babel-eslint"
  "axios-rate-limit"
  "react-redux"
  "axios-retry"
  "react-router"
  "redux-thunk"
  "validator"
  "eslint-plugin-node"
  "eslint-plugin-promise"
  "mongodb"
  "lodash/debounce"
  "classnames"
  "jsonwebtoken"
  "react-helmet"
  "mongoose-lean-virtuals"
  "jsonwebtoken"
  "lodash/trim"
  "lodash/reduce"
  "lodash/filter"
  "jest"
  "eslint-plugin-prettier"
  "eslint-config-prettier"
  "eslint-plugin-react-hooks"
  "lodash/find"
  "lodash/pick"
  "lodash/mergeWith"
  "axios-mock-server"
  "axios-oauth-client"
  "axios-debug-log"
  "lodash/flatten"
  "lodash/forEach"
  "jsonwebtoken"
  "eslint-plugin-jest"
  "lodash/reject"
  "axios-retry-interceptor"
  "lodash/isEmpty"
  "lodash/each"
  "axios-promise"
  "lodash/keys"
  "lodash/isPlainObject"
  "lodash/compact"
  "lodash/includes"
  "lodash/isString"
)

# Function to install packages
installPackages() {
  for package in "${packages[@]}"; do
    npm install "$package" >> "$log_file" 2>&1
    if [ $? -ne 0 ]; then
      echo "Error installing $package" | tee -a "$log_file"
    else
      echo "Installed $package" | tee -a "$log_file"
    fi
  done
}

# Run the function to install packages
installPackages
